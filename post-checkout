#!/usr/bin/env ruby

exit if ENV['AUTO_MIGRATE'] == '0'

from, to, flag = ARGV
exit unless flag == '1' && to != from

require_relative "lib/git"
require_relative "lib/schema"

ancestor = Git.common_ancestor(from, to)
rollbacks = Git.changes_in(Schema::MIGRATIONS_PATH, ancestor, from, 'A')
migrations = Git.changes_in(Schema::MIGRATIONS_PATH, ancestor, to, 'A')

Schema.print_plan(:rollbacks => rollbacks, :migrations => migrations)

if rollbacks.any?
  Git.within_sandbox do
    File.delete(*migrations) unless migrations.empty?
    Git.checkout(from, rollbacks)
    Schema.rollback(rollbacks)
  end
end

Schema.migrate(migrations)
