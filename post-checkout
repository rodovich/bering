#!/usr/bin/env ruby

require_relative "lib/git"

@from, @to, flag = ARGV
exit unless flag == '1' && @to != @from

def rollback(files)
  unless files.empty?
    Git.checkout(@from, files)
    system "rake db:rollback STEP=#{files.count}"
    Git.reset
  end
end

def migrate(files)
  system "rake db:migrate" unless files.empty?
end

path = 'db/migrate/'
ancestor = Git.common_ancestor(@from, @to)
rollbacks = Git.changes_in(path, ancestor, @from, 'A')
migrations = Git.changes_in(path, ancestor, @to, 'A')

puts "Migrating:  #{rollbacks.count} down, #{migrations.count} up"

rollback(rollbacks)
migrate(migrations)
